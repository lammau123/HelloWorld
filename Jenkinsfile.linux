pipeline {
  agent any
  tools {
    maven 'Maven'
  }
  stages {
    stage('Initialize') {
      steps {
        sh '''
             echo Initialzie 
             echo "PATH = " ${PATH}
             echo "M2_HOME = " ${M2_HOME}
            '''
      }
    }
 /* stage ('scan git'){
      steps {
        sh 'rm trufflehog || true'
        sh 'docker run gesellix/trufflehog --json https://github.com/lammau123/HelloWorld.git > trufflehog'
        sh 'cat trufflehog'
      }
  } */
  stage ('Dependency checker'){
    steps {
	    sh 'rm owasp* || true'
	    sh 'chmod +x dependency_check.sh'
	    sh '''
	    	pwd
	    	sudo bash ./dependency_check.sh
		'''
	    sh 'cat /var/lib/jenkins/OWASP-Dependency-Check/reports/dependency-check-suppression.xml'
	  }
  }
  stage ('Build') {
    steps {
      sh 'mvn clean package'
    }
  }
    /*
    stage ('Create infra') {
      steps {
        withCredentials([azureServicePrincipal(credentialsId: '714f096c-9d39-46fc-a56c-600b3c7964b9',
                                    subscriptionIdVariable: 'ARM_SUBSCRIPTION_ID',
                                    clientIdVariable: 'ARM_CLIENT_ID',
                                    clientSecretVariable: 'ARM_CLIENT_SECRET',
                                    tenantIdVariable: 'ARM_TENANT_ID')]) {
          sh '''
            echo " AZUre = " %ARM_CLIENT_ID%
            echo " AZUre = " %ARM_TENANT_ID%
            echo " AZUre = " %ARM_CLIENT_SECRET%
            echo " AZUre = " %ARM_SUBSCRIPTION_ID%
            terraform init -input=false
            terraform plan -out=tfout -input=false
            terraform apply tfout
          '''
        }
      }
    } */
    stage ('Deploy to Dev') {
      steps {
        sshagent (['dev']) {
          sh 'echo hello'
          sh 'scp -o StrictHostkeyChecking=no target/*.jar azureuser@52.188.155.23:/home/azureuser/dev/'
          sh 'ssh -tt azureuser@52.188.155.23 < start.sh'
        }
      }
    }
  }
}
